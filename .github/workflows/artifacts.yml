name: artifacts-build

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch: # Allows manual invocation

jobs:
  build:
    name: Build Toolchain Artifacts
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Install git lfs
        run: sudo apt-get install -y git-lfs
        shell: bash

      - name: Checkout sources
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0

      - name: Download submodules
        run: git submodule update --init --recursive
        shell: bash

      - name: Pull lfs artifacts
        run: git lfs pull
        shell: bash

      - name: Run `make dist`
        shell: 'script -q -e -c "bash {0}"'
        run: make dist

      - uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: dist
          path: dist/
          retention-days: 1

  upload_to_ghcr:
    name: Upload toolchain artifacts to GHCR
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: read
      packages: write
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
        with:
          name: dist

      - name: Upload images to ECR
        env:
          images: >-
            qos_client
            qos_enclave
            qos_host
        run: |
          for image in ${images}; do
            skopeo copy --all \
              "oci-archive:${image}.oci.x86_64.tar" \
              --dest-creds "${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}" \
              "docker://ghcr.io/tkhq/${image}:sha-${GITHUB_SHA}"
          done
